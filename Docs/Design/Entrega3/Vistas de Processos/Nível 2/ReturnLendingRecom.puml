@startuml
' Definindo os participantes
participant "HTTP Client" as client
participant "lendingCom[0] : lendingCom" as lending0
participant "Message Broker" as mb
participant "lendingCom[1] : lendingCom" as lending1
participant "lendingQuery[0] : lendingQuery" as lending01
participant "lendingQuery[1] : lendingQuery" as lending11
participant "top[0] : top" as top0
participant "top[1] : top" as top1
participant "recom[1] : recom" as  recom1
participant "recom[2] : recom" as  recom2


client o-> lending0: POST /lendings/return {lendingData}
activate lending0

lending0 -> lending0: Validar token JWT e permissões

lending0 -> lending0: saveTemp(lendingData)

lending0 -> mb: publish(lendingReturned with recomendation)
activate mb
deactivate lending0
mb -> recom1: notify(lendingReturned with recomendation)
deactivate mb
activate recom1
recom1 -> recom1: validate(recom)
alt success
recom1 -> recom1: save(recom)

recom1 -> mb: publish(recomendation)


deactivate recom1
activate mb

mb -> lending0: notify(lendingReturned with recomendation)
activate lending0
mb -> recom2: notify(lendingReturned with recomendation)
activate recom2
lending0 -> lending0: save(lendingData)


recom2 -> recom2: save(recom)
deactivate mb



lending0 -> mb: publish(lendingReturned)
deactivate recom2

activate mb

' Replicando dados para a outra instância (espelhamento)
mb -> lending1: notify(lendingReturned)
activate lending1
mb -> lending01: notify(lendingReturned)
activate lending01
mb -> lending11: notify(lendingReturned)
activate lending11
mb -> top0: notify(lendingReturned)
activate top0
mb -> top1: notify(lendingReturned)
deactivate mb

activate top1



lending1 -> lending1: save(lending)
lending01 -> lending01: save(lending)
deactivate lending1
lending11 -> lending11: save(lending)
deactivate lending01
top0 -> top0: save(lending)
deactivate lending11
top1 -> top1: save(lending)
deactivate top0


' Responder ao cliente com sucesso final após a replicação
lending0 -->o client: 201 Returned
deactivate top1
deactivate lending0
else error

activate recom1
recom1 -> mb: notify(recomendationFailed)
deactivate recom1
activate mb
mb -> lending0: notify(lendingReturned with error)
deactivate mb
activate lending0
lending0 -> lending0: deleteTemp(lendingData)


lending0 -->o client: 500 Internal Server Error (Erro interno)
deactivate lending0
end
@enduml
